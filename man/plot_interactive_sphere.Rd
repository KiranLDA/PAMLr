% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot_interactive_sphere.R
\name{plot_interactive_sphere}
\alias{plot_interactive_sphere}
\title{Plot 3d sphere}
\usage{
plot_interactive_sphere(x, y, z, spherecolor = "white",
  linecolor = "black", linewidth = 2, ptcol = "black",
  ptsize = 0.02, arrows = TRUE, cex = 1.5, ...)
}
\arguments{
\item{x}{data on x axis}

\item{y}{data on y axis}

\item{z}{data on z axis}

\item{spherecolor}{color of the sphere}

\item{linecolor}{color of the lines on the sphere}

\item{linewidth}{width of the lines on the sphere}

\item{ptcol}{color of points}

\item{ptsize}{size of the points plotted on the sphere}

\item{arrows}{default TRUE - whether or not to draw the arrows}

\item{cex}{size of font. If cex = 2 then fond is two times bigger.}

\item{...}{additional input for rgl::spheres3d for plotting points on the sphere using}
}
\value{
a 3d sphere plot
}
\description{
This function takes a spherical projection of acceleration or magentic data and plots it on a sphere which can be turned and zoomed into.
}
\examples{
data("swift")
start = as.POSIXct("2016-09-01","\%Y-\%m-\%d", tz="UTC")
end = as.POSIXct("2017-04-15","\%Y-\%m-\%d", tz="UTC")
swift = cutPAM(swift, start, end)
PAM_data = swift

# plot an m-phere
calibration = calculate_triaxial_magnetic(dta = PAM_data$magnetic)
plot_interactive_sphere(x = calibration$calib_magx,
          y = calibration$calib_magy,
          z = calibration$calib_magz,
          ptcol = "goldenrod",
          ptsize = 0.03,
          linecolor ="black",
          spherecolor="royalblue4",
          arrows=TRUE,
          cex=2)

# plot an g-phere
calibration = calculate_triaxial_acceleration(dta = PAM_data$magnetic)
plot_interactive_sphere(x = calibration$centered_accx,
          y = calibration$centered_accy,
          z = calibration$centered_accz,
          ptcol = "royalblue4",
          ptsize = 0.03,
          linecolor ="black",
          spherecolor="goldenrod",
          arrows=TRUE)

}
\references{
Adler, D., Nenadic, O. and Zucchini, W., 2003, March. Rgl: A r-library for 3d visualization with opengl. In Proceedings of the 35th Symposium of the Interface: Computing Science and Statistics, Salt Lake City (Vol. 35).
}
